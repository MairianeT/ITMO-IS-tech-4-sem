using Microsoft.CodeAnalysis;
using Microsoft.CodeAnalysis.CSharp;
using Microsoft.CodeAnalysis.CSharp.Syntax;
using Parser;

namespace SourceGenerator;

[Generator]
public class ClientGenerator : ISourceGenerator
{
    public void Initialize(GeneratorInitializationContext context)
    {
    }

    public InterpolatedStringContentSyntax GetUrl(string url)
    {
        var outUrl = "http://localhost:8081" + url;
        return SyntaxFactory.InterpolatedStringText()
            .WithTextToken(
                SyntaxFactory.Token(
                    SyntaxFactory.TriviaList(),
                    SyntaxKind.InterpolatedStringTextToken,
                    outUrl,
                    outUrl,
                    SyntaxFactory.TriviaList()
                )
            );
    }
    public InterpolatedStringContentSyntax[] GetUrl(string url, List<ArgDeclaration> argDeclarations) 
        { 
            var result = new InterpolatedStringContentSyntax[1 + argDeclarations.Count * 2];
            result[0] = GetUrl(url);
        
        var i = 1;
         foreach (var arg in argDeclarations)
         {
             var outUrl = "";
             if (arg != argDeclarations[0])
                 outUrl = "&" + arg.AgrName + "=";
             else 
                 outUrl =  "?" + argDeclarations[0].AgrName + "=";
             
             result[i] = SyntaxFactory.InterpolatedStringText()
                 .WithTextToken(
                     SyntaxFactory.Token(
                         SyntaxFactory.TriviaList(),
                         SyntaxKind.InterpolatedStringTextToken,
                         outUrl,
                         outUrl,
                         SyntaxFactory.TriviaList()
                     )
                 );
             i++;
             result[i] = SyntaxFactory.Interpolation(
                 SyntaxFactory.IdentifierName(arg.AgrName)
             );
        }

        return result;
    }

    public ParameterSyntax[] CreateParameters(List<ArgDeclaration> argDeclarations)
    {
        var snt = new ParameterSyntax[argDeclarations.Count];
        int i = 0;
        foreach (var arg in argDeclarations)
        {
            snt[i] = SyntaxFactory.Parameter(
                    SyntaxFactory.Identifier(arg.AgrName))
                .WithType(
                    SyntaxFactory.IdentifierName(arg.ArgType));
            i++;
        }

        return snt;
    }
    
    public MemberDeclarationSyntax[] CreateMethods(List<MethodDeclaration> declarations)
    {
        var i = 0;
        var mds = new MemberDeclarationSyntax[declarations.Count];
        foreach (var declaration in declarations)
        {
            if (declaration.HttpMethodName == "Get")
            {
                mds[i] = SyntaxFactory.MethodDeclaration(
                        SyntaxFactory.IdentifierName("string"),
                        SyntaxFactory.Identifier(declaration.MethodName)
                    )
                    .AddModifiers(
                        SyntaxFactory.Token(SyntaxKind.PublicKeyword)
                    )
                    .AddParameterListParameters(
                        CreateParameters(declaration.ArgList)
                    )
                    .WithBody(
                        SyntaxFactory.Block(
                            SyntaxFactory.LocalDeclarationStatement(
                                SyntaxFactory.VariableDeclaration(
                                        SyntaxFactory.QualifiedName(
                                            SyntaxFactory.QualifiedName(
                                                SyntaxFactory.IdentifierName("System"),
                                                SyntaxFactory.IdentifierName("Net")
                                            ),
                                            SyntaxFactory.IdentifierName("WebRequest")
                                        )
                                    )
                                    .WithVariables(
                                        SyntaxFactory
                                            .SingletonSeparatedList<
                                                VariableDeclaratorSyntax>(
                                                SyntaxFactory.VariableDeclarator(
                                                        SyntaxFactory.Identifier("req")
                                                    )
                                                    .WithInitializer(
                                                        SyntaxFactory.EqualsValueClause(
                                                            SyntaxFactory
                                                                .InvocationExpression(
                                                                    SyntaxFactory
                                                                        .MemberAccessExpression(
                                                                            SyntaxKind
                                                                                .SimpleMemberAccessExpression,
                                                                            SyntaxFactory
                                                                                .MemberAccessExpression(
                                                                                    SyntaxKind
                                                                                        .SimpleMemberAccessExpression,
                                                                                    SyntaxFactory
                                                                                        .MemberAccessExpression(
                                                                                            SyntaxKind
                                                                                                .SimpleMemberAccessExpression,
                                                                                            SyntaxFactory
                                                                                                .IdentifierName(
                                                                                                    "System"),
                                                                                            SyntaxFactory
                                                                                                .IdentifierName(
                                                                                                    "Net")
                                                                                        ),
                                                                                    SyntaxFactory
                                                                                        .IdentifierName(
                                                                                            "WebRequest")
                                                                                ),
                                                                            SyntaxFactory
                                                                                .IdentifierName(
                                                                                    "Create")
                                                                        )
                                                                )
                                                                .AddArgumentListArguments(
                                                                    SyntaxFactory.Argument(
                                                                        SyntaxFactory.InterpolatedStringExpression(
                                                                                SyntaxFactory.Token(SyntaxKind
                                                                                    .InterpolatedStringStartToken)
                                                                            )
                                                                            .AddContents(
                                                                                GetUrl(declaration.Url, declaration.ArgList)
                                                                            )
                                                                    )
                                                                )
                                                        )
                                                    )
                                            )
                                    )
                            ),
                            SyntaxFactory.LocalDeclarationStatement(
                                SyntaxFactory.VariableDeclaration(
                                        SyntaxFactory.QualifiedName(
                                            SyntaxFactory.QualifiedName(
                                                SyntaxFactory.IdentifierName("System"),
                                                SyntaxFactory.IdentifierName("Net")
                                            ),
                                            SyntaxFactory.IdentifierName("WebResponse")
                                        )
                                    )
                                    .AddVariables(
                                        SyntaxFactory.VariableDeclarator(
                                                SyntaxFactory.Identifier("resp"))
                                            .WithInitializer(
                                                SyntaxFactory.EqualsValueClause(
                                                    SyntaxFactory
                                                        .InvocationExpression(
                                                            SyntaxFactory
                                                                .MemberAccessExpression(
                                                                    SyntaxKind
                                                                        .SimpleMemberAccessExpression,
                                                                    SyntaxFactory
                                                                        .IdentifierName(
                                                                            "req"),
                                                                    SyntaxFactory
                                                                        .IdentifierName(
                                                                            "GetResponse")
                                                                )
                                                        )
                                                )
                                            )
                                    )
                            ),
                            SyntaxFactory.LocalDeclarationStatement(
                                SyntaxFactory.VariableDeclaration(
                                        SyntaxFactory.QualifiedName(
                                            SyntaxFactory.QualifiedName(
                                                SyntaxFactory.IdentifierName("System"),
                                                SyntaxFactory.IdentifierName("IO")
                                            ),
                                            SyntaxFactory.IdentifierName("Stream")
                                        )
                                    )
                                    .WithVariables(
                                        SyntaxFactory
                                            .SingletonSeparatedList<
                                                VariableDeclaratorSyntax>(
                                                SyntaxFactory.VariableDeclarator(
                                                        SyntaxFactory.Identifier("stream")
                                                    )
                                                    .WithInitializer(
                                                        SyntaxFactory.EqualsValueClause(
                                                            SyntaxFactory
                                                                .InvocationExpression(
                                                                    SyntaxFactory
                                                                        .MemberAccessExpression(
                                                                            SyntaxKind
                                                                                .SimpleMemberAccessExpression,
                                                                            SyntaxFactory
                                                                                .IdentifierName(
                                                                                    "resp"),
                                                                            SyntaxFactory
                                                                                .IdentifierName(
                                                                                    "GetResponseStream")
                                                                        )
                                                                )
                                                        )
                                                    )
                                            )
                                    )
                            ),
                            SyntaxFactory.LocalDeclarationStatement(
                                SyntaxFactory.VariableDeclaration(
                                        SyntaxFactory.QualifiedName(
                                            SyntaxFactory.QualifiedName(
                                                SyntaxFactory.IdentifierName("System"),
                                                SyntaxFactory.IdentifierName("IO")
                                            ),
                                            SyntaxFactory.IdentifierName("StreamReader")
                                        )
                                    )
                                    .WithVariables(
                                        SyntaxFactory
                                            .SingletonSeparatedList<
                                                VariableDeclaratorSyntax>(
                                                SyntaxFactory.VariableDeclarator(
                                                        SyntaxFactory.Identifier("sr")
                                                    )
                                                    .WithInitializer(
                                                        SyntaxFactory.EqualsValueClause(
                                                            SyntaxFactory
                                                                .ObjectCreationExpression(
                                                                    SyntaxFactory
                                                                        .QualifiedName(
                                                                            SyntaxFactory
                                                                                .QualifiedName(
                                                                                    SyntaxFactory
                                                                                        .IdentifierName(
                                                                                            "System"),
                                                                                    SyntaxFactory
                                                                                        .IdentifierName(
                                                                                            "IO")
                                                                                ),
                                                                            SyntaxFactory
                                                                                .IdentifierName(
                                                                                    "StreamReader")
                                                                        )
                                                                )
                                                                .WithArgumentList(
                                                                    SyntaxFactory
                                                                        .ArgumentList(
                                                                            SyntaxFactory
                                                                                .SingletonSeparatedList
                                                                                    <ArgumentSyntax>(
                                                                                        SyntaxFactory
                                                                                            .Argument(
                                                                                                SyntaxFactory
                                                                                                    .IdentifierName(
                                                                                                        "stream")
                                                                                            )
                                                                                    )
                                                                        )
                                                                )
                                                        )
                                                    )
                                            )
                                    )
                            ),
                            SyntaxFactory.LocalDeclarationStatement(
                                    SyntaxFactory.VariableDeclaration(
                                        SyntaxFactory.PredefinedType(
                                            SyntaxFactory.Token(SyntaxKind.StringKeyword)
                                        )
                                    )
                                    .WithVariables(
                                        SyntaxFactory.SingletonSeparatedList<VariableDeclaratorSyntax>(
                                            SyntaxFactory.VariableDeclarator(
                                                SyntaxFactory.Identifier("Out")
                                            )
                                            .WithInitializer(
                                                SyntaxFactory.EqualsValueClause(
                                                    SyntaxFactory.InvocationExpression(
                                                        SyntaxFactory.MemberAccessExpression(
                                                            SyntaxKind.SimpleMemberAccessExpression,
                                                            SyntaxFactory.InvocationExpression(
                                                                SyntaxFactory.MemberAccessExpression(
                                                                    SyntaxKind.SimpleMemberAccessExpression,
                                                                    SyntaxFactory.IdentifierName("sr"),
                                                                    SyntaxFactory.IdentifierName("ReadToEnd")
                                                                )
                                                            ),
                                                            SyntaxFactory.IdentifierName("ToString")
                                                        )
                                                    )
                                                )
                                            )
                                        )
                                    )
                                ),
                            SyntaxFactory.ExpressionStatement(
                                SyntaxFactory.InvocationExpression(
                                    SyntaxFactory.MemberAccessExpression(
                                        SyntaxKind.SimpleMemberAccessExpression,
                                        SyntaxFactory.IdentifierName("sr"),
                                        SyntaxFactory.IdentifierName("Close")
                                    )
                                )
                            ),
                            SyntaxFactory.ReturnStatement(
                                SyntaxFactory.IdentifierName("Out")
                            )
                        )
                    );
                Console.WriteLine(declaration.MethodName);
            }
            else
            {
                mds[i] = SyntaxFactory.MethodDeclaration(
                        SyntaxFactory.PredefinedType(
                            SyntaxFactory.Token(SyntaxKind.VoidKeyword)
                        ),
                        SyntaxFactory.Identifier(declaration.MethodName)
                    )
                    .WithModifiers(
                        SyntaxFactory.TokenList(
                            SyntaxFactory.Token(SyntaxKind.PublicKeyword)
                        )
                    )
                    .WithParameterList(
                        SyntaxFactory.ParameterList(
                            SyntaxFactory.SingletonSeparatedList<ParameterSyntax>(
                                SyntaxFactory.Parameter(
                                        SyntaxFactory.Identifier("data")
                                    )
                                    .WithType(
                                        SyntaxFactory.PredefinedType(
                                            SyntaxFactory.Token(SyntaxKind.StringKeyword)
                                        )
                                    )
                            )
                        )
                    )
                    .WithBody(
                        SyntaxFactory.Block(
                            SyntaxFactory.LocalDeclarationStatement(
                                SyntaxFactory.VariableDeclaration(
                                        SyntaxFactory.IdentifierName(
                                            SyntaxFactory.Identifier(
                                                SyntaxFactory.TriviaList(),
                                                SyntaxKind.VarKeyword,
                                                "var",
                                                "var",
                                                SyntaxFactory.TriviaList()
                                            )
                                        )
                                    )
                                    .WithVariables(
                                        SyntaxFactory.SingletonSeparatedList<VariableDeclaratorSyntax>(
                                            SyntaxFactory.VariableDeclarator(
                                                    SyntaxFactory.Identifier("httpRequest")
                                                )
                                                .WithInitializer(
                                                    SyntaxFactory.EqualsValueClause(
                                                        SyntaxFactory.CastExpression(
                                                            SyntaxFactory.IdentifierName("HttpWebRequest"),
                                                            SyntaxFactory.InvocationExpression(
                                                                    SyntaxFactory.MemberAccessExpression(
                                                                        SyntaxKind.SimpleMemberAccessExpression,
                                                                        SyntaxFactory.IdentifierName("WebRequest"),
                                                                        SyntaxFactory.IdentifierName("Create")
                                                                    )
                                                                )
                                                                .WithArgumentList(
                                                                    SyntaxFactory.ArgumentList(
                                                                    SyntaxFactory.SingletonSeparatedList<ArgumentSyntax>(
                                                                        SyntaxFactory.Argument(
                                                                            SyntaxFactory.InterpolatedStringExpression(
                                                                                SyntaxFactory.Token(SyntaxKind.InterpolatedStringStartToken)
                                                                            )
                                                                            .WithContents(
                                                                                SyntaxFactory.SingletonList<InterpolatedStringContentSyntax>(
                                                                                    GetUrl(declaration.Url)
                                                                                    )
                                                                                )
                                                                            )
                                                                        )
                                                                    )
                                                                )
                                                        )
                                                    )
                                                )
                                        )
                                    )
                            ),
                            SyntaxFactory.ExpressionStatement(
                                SyntaxFactory.AssignmentExpression(
                                    SyntaxKind.SimpleAssignmentExpression,
                                    SyntaxFactory.MemberAccessExpression(
                                        SyntaxKind.SimpleMemberAccessExpression,
                                        SyntaxFactory.IdentifierName("httpRequest"),
                                        SyntaxFactory.IdentifierName("Method")
                                    ),
                                    SyntaxFactory.LiteralExpression(
                                        SyntaxKind.StringLiteralExpression,
                                        SyntaxFactory.Literal("POST")
                                    )
                                )
                            ),
                            SyntaxFactory.ExpressionStatement(
                                SyntaxFactory.AssignmentExpression(
                                    SyntaxKind.SimpleAssignmentExpression,
                                    SyntaxFactory.MemberAccessExpression(
                                        SyntaxKind.SimpleMemberAccessExpression,
                                        SyntaxFactory.IdentifierName("httpRequest"),
                                        SyntaxFactory.IdentifierName("ContentType")
                                    ),
                                    SyntaxFactory.LiteralExpression(
                                        SyntaxKind.StringLiteralExpression,
                                        SyntaxFactory.Literal("application/json")
                                    )
                                )
                            ),
                            SyntaxFactory.UsingStatement(
                                    SyntaxFactory.UsingStatement(
                                            SyntaxFactory.Block(
                                                SyntaxFactory.SingletonList<StatementSyntax>(
                                                    SyntaxFactory.ExpressionStatement(
                                                        SyntaxFactory.InvocationExpression(
                                                                SyntaxFactory.MemberAccessExpression(
                                                                    SyntaxKind.SimpleMemberAccessExpression,
                                                                    SyntaxFactory.IdentifierName("writer"),
                                                                    SyntaxFactory.IdentifierName("Write")
                                                                )
                                                            )
                                                            .WithArgumentList(
                                                                SyntaxFactory.ArgumentList(
                                                                    SyntaxFactory
                                                                        .SingletonSeparatedList<ArgumentSyntax>(
                                                                            SyntaxFactory.Argument(
                                                                                SyntaxFactory.IdentifierName("data")
                                                                            )
                                                                        )
                                                                )
                                                            )
                                                    )
                                                )
                                            )
                                        )
                                        .WithDeclaration(
                                            SyntaxFactory.VariableDeclaration(
                                                    SyntaxFactory.IdentifierName(
                                                        SyntaxFactory.Identifier(
                                                            SyntaxFactory.TriviaList(),
                                                            SyntaxKind.VarKeyword,
                                                            "var",
                                                            "var",
                                                            SyntaxFactory.TriviaList()
                                                        )
                                                    )
                                                )
                                                .WithVariables(
                                                    SyntaxFactory.SingletonSeparatedList<VariableDeclaratorSyntax>(
                                                        SyntaxFactory.VariableDeclarator(
                                                                SyntaxFactory.Identifier("writer")
                                                            )
                                                            .WithInitializer(
                                                                SyntaxFactory.EqualsValueClause(
                                                                    SyntaxFactory.ObjectCreationExpression(
                                                                            SyntaxFactory.IdentifierName("StreamWriter")
                                                                        )
                                                                        .WithArgumentList(
                                                                            SyntaxFactory.ArgumentList(
                                                                                SyntaxFactory
                                                                                    .SingletonSeparatedList<
                                                                                        ArgumentSyntax>(
                                                                                        SyntaxFactory.Argument(
                                                                                            SyntaxFactory
                                                                                                .IdentifierName(
                                                                                                    "requestStream")
                                                                                        )
                                                                                    )
                                                                            )
                                                                        )
                                                                )
                                                            )
                                                    )
                                                )
                                        )
                                )
                                .WithDeclaration(
                                    SyntaxFactory.VariableDeclaration(
                                            SyntaxFactory.IdentifierName(
                                                SyntaxFactory.Identifier(
                                                    SyntaxFactory.TriviaList(),
                                                    SyntaxKind.VarKeyword,
                                                    "var",
                                                    "var",
                                                    SyntaxFactory.TriviaList()
                                                )
                                            )
                                        )
                                        .WithVariables(
                                            SyntaxFactory.SingletonSeparatedList<VariableDeclaratorSyntax>(
                                                SyntaxFactory.VariableDeclarator(
                                                        SyntaxFactory.Identifier("requestStream")
                                                    )
                                                    .WithInitializer(
                                                        SyntaxFactory.EqualsValueClause(
                                                            SyntaxFactory.InvocationExpression(
                                                                SyntaxFactory.MemberAccessExpression(
                                                                    SyntaxKind.SimpleMemberAccessExpression,
                                                                    SyntaxFactory.IdentifierName("httpRequest"),
                                                                    SyntaxFactory.IdentifierName("GetRequestStream")
                                                                )
                                                            )
                                                        )
                                                    )
                                            )
                                        )
                                ),
                            SyntaxFactory.UsingStatement(
                                    SyntaxFactory.UsingStatement(
                                            SyntaxFactory.UsingStatement(
                                                    SyntaxFactory.Block(
                                                        SyntaxFactory.SingletonList<StatementSyntax>(
                                                            SyntaxFactory.LocalDeclarationStatement(
                                                                SyntaxFactory.VariableDeclaration(
                                                                        SyntaxFactory.PredefinedType(
                                                                            SyntaxFactory.Token(
                                                                                SyntaxKind.StringKeyword)
                                                                        )
                                                                    )
                                                                    .WithVariables(
                                                                        SyntaxFactory
                                                                            .SingletonSeparatedList<
                                                                                VariableDeclaratorSyntax>(
                                                                                SyntaxFactory.VariableDeclarator(
                                                                                        SyntaxFactory.Identifier(
                                                                                            "response")
                                                                                    )
                                                                                    .WithInitializer(
                                                                                        SyntaxFactory.EqualsValueClause(
                                                                                            SyntaxFactory
                                                                                                .InvocationExpression(
                                                                                                    SyntaxFactory
                                                                                                        .MemberAccessExpression(
                                                                                                            SyntaxKind
                                                                                                                .SimpleMemberAccessExpression,
                                                                                                            SyntaxFactory
                                                                                                                .IdentifierName(
                                                                                                                    "reader"),
                                                                                                            SyntaxFactory
                                                                                                                .IdentifierName(
                                                                                                                    "ReadToEnd")
                                                                                                        )
                                                                                                )
                                                                                        )
                                                                                    )
                                                                            )
                                                                    )
                                                            )
                                                        )
                                                    )
                                                )
                                                .WithDeclaration(
                                                    SyntaxFactory.VariableDeclaration(
                                                            SyntaxFactory.IdentifierName(
                                                                SyntaxFactory.Identifier(
                                                                    SyntaxFactory.TriviaList(),
                                                                    SyntaxKind.VarKeyword,
                                                                    "var",
                                                                    "var",
                                                                    SyntaxFactory.TriviaList()
                                                                )
                                                            )
                                                        )
                                                        .WithVariables(
                                                            SyntaxFactory
                                                                .SingletonSeparatedList<VariableDeclaratorSyntax>(
                                                                    SyntaxFactory.VariableDeclarator(
                                                                            SyntaxFactory.Identifier("reader")
                                                                        )
                                                                        .WithInitializer(
                                                                            SyntaxFactory.EqualsValueClause(
                                                                                SyntaxFactory.ObjectCreationExpression(
                                                                                        SyntaxFactory.IdentifierName(
                                                                                            "StreamReader")
                                                                                    )
                                                                                    .WithArgumentList(
                                                                                        SyntaxFactory.ArgumentList(
                                                                                            SyntaxFactory
                                                                                                .SingletonSeparatedList<
                                                                                                    ArgumentSyntax>(
                                                                                                    SyntaxFactory
                                                                                                        .Argument(
                                                                                                            SyntaxFactory
                                                                                                                .IdentifierName(
                                                                                                                    "responseStream")
                                                                                                        )
                                                                                                )
                                                                                        )
                                                                                    )
                                                                            )
                                                                        )
                                                                )
                                                        )
                                                )
                                        )
                                        .WithDeclaration(
                                            SyntaxFactory.VariableDeclaration(
                                                    SyntaxFactory.IdentifierName(
                                                        SyntaxFactory.Identifier(
                                                            SyntaxFactory.TriviaList(),
                                                            SyntaxKind.VarKeyword,
                                                            "var",
                                                            "var",
                                                            SyntaxFactory.TriviaList()
                                                        )
                                                    )
                                                )
                                                .WithVariables(
                                                    SyntaxFactory.SingletonSeparatedList<VariableDeclaratorSyntax>(
                                                        SyntaxFactory.VariableDeclarator(
                                                                SyntaxFactory.Identifier("responseStream")
                                                            )
                                                            .WithInitializer(
                                                                SyntaxFactory.EqualsValueClause(
                                                                    SyntaxFactory.InvocationExpression(
                                                                        SyntaxFactory.MemberAccessExpression(
                                                                            SyntaxKind.SimpleMemberAccessExpression,
                                                                            SyntaxFactory
                                                                                .IdentifierName("httpResponse"),
                                                                            SyntaxFactory.IdentifierName(
                                                                                "GetResponseStream")
                                                                        )
                                                                    )
                                                                )
                                                            )
                                                    )
                                                )
                                        )
                                )
                                .WithDeclaration(
                                    SyntaxFactory.VariableDeclaration(
                                            SyntaxFactory.IdentifierName(
                                                SyntaxFactory.Identifier(
                                                    SyntaxFactory.TriviaList(),
                                                    SyntaxKind.VarKeyword,
                                                    "var",
                                                    "var",
                                                    SyntaxFactory.TriviaList()
                                                )
                                            )
                                        )
                                        .WithVariables(
                                            SyntaxFactory.SingletonSeparatedList<VariableDeclaratorSyntax>(
                                                SyntaxFactory.VariableDeclarator(
                                                        SyntaxFactory.Identifier("httpResponse")
                                                    )
                                                    .WithInitializer(
                                                        SyntaxFactory.EqualsValueClause(
                                                            SyntaxFactory.InvocationExpression(
                                                                SyntaxFactory.MemberAccessExpression(
                                                                    SyntaxKind.SimpleMemberAccessExpression,
                                                                    SyntaxFactory.IdentifierName("httpRequest"),
                                                                    SyntaxFactory.IdentifierName("GetResponse")
                                                                )
                                                            )
                                                        )
                                                    )
                                            )
                                        )
                                )
                        )
                    );
            }
            i++;                 
        }
        return mds;
    }
    
    public CompilationUnitSyntax CreateSource(List<MethodDeclaration> declarations)
    {
        var unitSyntax = SyntaxFactory.CompilationUnit()
            .WithUsings(
                SyntaxFactory.SingletonList<UsingDirectiveSyntax>(
                    SyntaxFactory.UsingDirective(
                        SyntaxFactory.QualifiedName(
                            SyntaxFactory.IdentifierName("System"),
                            SyntaxFactory.IdentifierName("Net")
                        )
                    )
                )
            )
            .AddMembers(
                SyntaxFactory.NamespaceDeclaration(
                        SyntaxFactory.IdentifierName("GeneratorResult")
                    )
                    .AddMembers(
                        SyntaxFactory.ClassDeclaration("Client")
                            .AddModifiers(
                                SyntaxFactory.Token(SyntaxKind.PublicKeyword)
                            )
                            .AddMembers(
                                CreateMethods(declarations)
                            )))
            .NormalizeWhitespace();
        return unitSyntax;
    }

    
    public void Execute(GeneratorExecutionContext context)
    {
        var declarations = new List<MethodDeclaration>();
        declarations.AddRange(Parser.Parser.ControllerParser(
            @"D:\ITMO\4 sem\ProgTech\lab-2\lab2\src\main\java\com\MyProject\lab2\Controllers\RabbitController.java"));
            
        declarations.AddRange(Parser.Parser.ControllerParser(@"D:\ITMO\4 sem\ProgTech\lab-2\lab2\src\main\java\com\MyProject\lab2\Controllers\OwnerController.java"));

        
        context.AddSource("GeneratorResult.cs", CreateSource(declarations).ToString());
    }
}